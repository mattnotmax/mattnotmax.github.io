<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lnk files on bit_of_hex</title>
    <link>https://mattnotmax.github.io/tags/lnk-files/</link>
    <description>Recent content in lnk files on bit_of_hex</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 09 Feb 2020 23:54:19 +0000</lastBuildDate>
    
        <atom:link href="https://mattnotmax.github.io/tags/lnk-files/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Suspected Sapphire Mushroom (APT-C-12) malicious LNK files</title>
      <link>https://mattnotmax.github.io/2020/02/sapphire-mushroom-lnk-files/</link>
      <pubDate>Sun, 09 Feb 2020 23:54:19 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2020/02/sapphire-mushroom-lnk-files/</guid>
      <description>In July 2018, the Chinese-based research group 360 Technical Intelligence Center (TIC) produced a report &amp;ldquo;蓝宝菇（APT-C-12）针对性攻击技术细节揭秘&amp;rdquo; (Sapphire Mushroom (APT-C-12) Technical Details Revealed1). This report analysed a malicious LNK file allegedly used by the</description>
    </item>
    
    <item>
      <title>&#34;Say Cheese!&#34; An analysis of foto.lnk</title>
      <link>https://mattnotmax.github.io/2019/11/say-cheese-an-analysis-of-foto-lnk/</link>
      <pubDate>Sat, 16 Nov 2019 16:46:26 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2019/11/say-cheese-an-analysis-of-foto-lnk/</guid>
      <description>In Australia, a platypus is colloquially called the &amp;lsquo;spare parts animal&amp;rsquo;. It&amp;rsquo;s an egg-laying mammal, with a duck bill, beaver tail and webbed feet. It&amp;rsquo;s perfectly adapted to its environment despite looking like a Frankenstien of the animal world.
What does this have to do with a malicious LNK file? Well, apart from the fact I like platypuses (or is it platypi?), malware using LNK files stitch together the world between the attacker and the victim.</description>
    </item>
    
    <item>
      <title>Deriving intelligence from LNK files</title>
      <link>https://mattnotmax.github.io/2019/07/deriving-intelligence-from-lnk-files/</link>
      <pubDate>Mon, 15 Jul 2019 02:14:48 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2019/07/deriving-intelligence-from-lnk-files/</guid>
      <description>LNK files have a healthy life in DFIR. There is good reason: they are so awesome for analysis. Whether it be linking a user to knowledge of a file, as part of a jump list, or in their use for malicious purposes. In regards to the latter, The MITRE ATT&amp;amp;CK framework describes this as the specific technique: &amp;lsquo;shortcut modification&amp;rsquo; (T1023) which is summarised as follows:
 Shortcuts or symbolic links are ways of referencing other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.</description>
    </item>
    
    <item>
      <title>Base64 Encoded File Signatures</title>
      <link>https://mattnotmax.github.io/2019/02/base64-encoded-signatures/</link>
      <pubDate>Tue, 19 Feb 2019 00:06:06 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2019/02/base64-encoded-signatures/</guid>
      <description>Inspired by a post by John Lambert and others who contributed, I&amp;rsquo;ve put together a table of Base64 encodings for certain file signatures and script elements often encountered in malware analysis.
Due to the nature of Base64 encoding, there are different possibilities of the encoding result depending on the placement of the bytes in the overall structure of the blob. Using CyberChef all the possible Base64 offsets can be determined. However, in the below tables for ease I&amp;rsquo;ve only included the fixed bytes as if the header was at the start of the blob of Base64.</description>
    </item>
    
    <item>
      <title>ATT&amp;CKing the Singapore Health Data Breach</title>
      <link>https://mattnotmax.github.io/2019/01/attack-and-singapore-breach/</link>
      <pubDate>Sat, 12 Jan 2019 17:53:26 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2019/01/attack-and-singapore-breach/</guid>
      <description>Background Between August 2017 and July 2018 a suspected APT group gained access to the Singapore Health Services Private Limited (SingHealth) patient database and exfiltrated the personal details of 1.5 million patients including their names, addresses, genders, races, and dates of birth. Of this, 159,000 patients had additional medical data stolen including the Prime Minster of Singapore.
On 10 January 2019, a report titled &amp;lsquo;Public Report of the Committee of Inquiry into the Cyber Attack on Singapore Health Services Private Limited’s patient database on or around 27 June 2018&amp;rsquo; was released containing detailed information in regards to the hack and the subsequent incident response activities.</description>
    </item>
    
    <item>
      <title>Digital Forensics Interviews: Law Enforcement Edition</title>
      <link>https://mattnotmax.github.io/2018/11/starting-in-digital-forensics-law-enforcement-edition/</link>
      <pubDate>Wed, 07 Nov 2018 00:17:47 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2018/11/starting-in-digital-forensics-law-enforcement-edition/</guid>
      <description>Interviews are tough, and digital forensics jobs in law enforcement don&amp;rsquo;t come up very often. So how do you prepare? Getting a job in #DFIR is a common thread and I thought I&amp;rsquo;d add my thoughts as well as some possible interview questions specific to law enforcement. Even if these questions don&amp;rsquo;t remotely come up in your actual interview, the key for success is preparation. So thinking about these questions will put you in good stead for a role.</description>
    </item>
    
    <item>
      <title>Mind Mapping Volatility</title>
      <link>https://mattnotmax.github.io/2018/09/mind-mapping-volatility/</link>
      <pubDate>Tue, 11 Sep 2018 01:54:13 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2018/09/mind-mapping-volatility/</guid>
      <description>Great sources of DFIR information are endless: books, blogs, repositories, Twitter, lectures, conferences, and journals. One of the hardest skills I am yet to master is transferring this huge amount of information into digestible and searchable chunks. At the moment my &amp;lsquo;system&amp;rsquo; consists mainly of a stack of printouts, endless Twitter bookmarks, 75 open Chrome tabs, and sticky notes with Excel formulae (generally different ways to convert Unix epochs to a readable format en mass&amp;hellip;).</description>
    </item>
    
    <item>
      <title>The Cuckoo&#39;s Egg: Redux</title>
      <link>https://mattnotmax.github.io/2018/08/cuckoos-egg/</link>
      <pubDate>Mon, 13 Aug 2018 20:13:58 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2018/08/cuckoos-egg/</guid>
      <description>So many people recommend &amp;lsquo;The Cuckoo&amp;rsquo;s Egg&amp;rsquo; as a must-read for information security professionals. For those in the dark, the book follows the author Cliff Stoll tracking unauthorised access to the US Lawrence Berkeley National Laboratory computer network in the late 1980s.
 The book itself is an engaging and fascinating account of a low-tech attacker (by today&amp;rsquo;s standards) penetrating various networks across the US and the low-tech defender tracking his activities.</description>
    </item>
    
    <item>
      <title>Contemporaneous Notes: a forensicator&#39;s best friend</title>
      <link>https://mattnotmax.github.io/2018/08/contemporaneous-notes/</link>
      <pubDate>Wed, 01 Aug 2018 19:41:22 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2018/08/contemporaneous-notes/</guid>
      <description>This post can actually be pretty short: write contemporaneous notes. There. Done. Finished.
Need more detail?
Writing contemporaneous notes is the smartest, best, and most important thing you will do in your DFIR career. They will help you, save you, protect you, and aid you in every aspect of your work. DON&amp;rsquo;T make the mistake of thinking that contemporaneous notes will be some &amp;lsquo;extra evidence&amp;rsquo; that will get you in trouble, or contradict your report findings.</description>
    </item>
    
    <item>
      <title>Brute-forcing dates &amp; times in binary data</title>
      <link>https://mattnotmax.github.io/2018/07/brute-force-dates-times/</link>
      <pubDate>Sat, 28 Jul 2018 15:33:41 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2018/07/brute-force-dates-times/</guid>
      <description>It&amp;rsquo;s common when exploring a new file format or Windows registry key to look for dates and times. Lots of binary structures encode dates and times which are essential to parse out.
Windows 10 has been exceptional at releasing &amp;lsquo;new&amp;rsquo; data formats - especially in the registry where many of these new configuration settings are stored. Some great work has been done by the DFIR community to locate, parse and understand these new structures.</description>
    </item>
    
    <item>
      <title>Dude! Where&#39;s my HTTP/2?</title>
      <link>https://mattnotmax.github.io/2018/07/http2-and-chrome-cache/</link>
      <pubDate>Sun, 22 Jul 2018 02:43:42 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2018/07/http2-and-chrome-cache/</guid>
      <description>HTTP/2 is fundamentally different from HTTP/1.x; but it is not some edge-case of internet traffic. Figures that I found from April 2016 indicated it was 68% of web-traffic. It is supported by the major browsers, and even the lowly bit_of_hex blog is sent via HTTP/2. To check, the browsers generally identify HTTP/2 traffic as &amp;lsquo;h2&amp;rsquo; in their developer tools.
 HTTP/2 is a binary protocol (as opposed to HTTP/1.1) and based around &amp;lsquo;frames&amp;rsquo; which include types such as HEADERS, DATA, SETTINGS, and WINDOW_UPDATE.</description>
    </item>
    
    <item>
      <title>Your forensic tools are wrong, because your application is lying</title>
      <link>https://mattnotmax.github.io/2018/07/chrome-cache-and-http2/</link>
      <pubDate>Mon, 02 Jul 2018 13:51:12 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2018/07/chrome-cache-and-http2/</guid>
      <description>We verify our forensic tools, right? And once we verify them, it&amp;rsquo;s all good? But what if the application is lying? Is the forensic tool right or wrong?
I was playing around with HTTP/2 to see how the protocol works. A more detailed post examining HTTP/2 is forthcoming, but as usual I went down a rabbit hole and ended up&amp;hellip;well, writing a Chrome bug report. But I&amp;rsquo;ll take a few steps back.</description>
    </item>
    
    <item>
      <title>A Different View of Forensic Artefact Typologies</title>
      <link>https://mattnotmax.github.io/2018/06/forensic-typologies/</link>
      <pubDate>Mon, 18 Jun 2018 13:56:51 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2018/06/forensic-typologies/</guid>
      <description>There are many ways to categorise forensic artefacts. Probably the best known (and well put) is the SANS Windows Forensics Analysis poster. This poster lists artefacts by the formula of &amp;lsquo;Evidence of&amp;hellip;&#39;. It&amp;rsquo;s a great reference and training tool. But could we look at forensic artefacts differently? And why should we?
By categorising data differently, we can look at problems differently. Solving complex problems is a significant part of our work.</description>
    </item>
    
    <item>
      <title>CyberChef &amp; DFIR</title>
      <link>https://mattnotmax.github.io/2018/05/cyberchef/</link>
      <pubDate>Mon, 28 May 2018 14:06:10 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2018/05/cyberchef/</guid>
      <description>I have a confession to make. I am part of the CyberChef cult. When you join a cult you find yourself saying things like, &amp;ldquo;Woah! How come I didn&amp;rsquo;t know about this before?&amp;rdquo; and &amp;ldquo;Where have you been all my life!&amp;rdquo; You also spend a lot of your time proselytising to other, random people about your &amp;lsquo;fantastic&amp;rsquo; new life.
However, most cults take your time, soul, and money, and only give you a glass of Kool Aid in return.</description>
    </item>
    
    <item>
      <title>Memory Forensics &amp; Tor (part two)</title>
      <link>https://mattnotmax.github.io/2018/05/memory-forensics-tor-part-two/</link>
      <pubDate>Thu, 10 May 2018 00:55:59 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2018/05/memory-forensics-tor-part-two/</guid>
      <description>In my previous post I used Volatility to examine a memory image from a hypothetical Tor user accessing webmail, the internet, and a Tor hidden service. From that analysis I could ascertain with good confidence a user of the operating system connected to the Tor network from a USB on drive E:.
In this post, I will continue with the same memory image but see what additional information can be revealed from data carving tools.</description>
    </item>
    
    <item>
      <title>Memory Forensics &amp; Tor</title>
      <link>https://mattnotmax.github.io/2018/04/volatility-and-tor/</link>
      <pubDate>Sat, 28 Apr 2018 23:24:00 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2018/04/volatility-and-tor/</guid>
      <description>Memory forensics is a powerful tool. All executed code and data passes through RAM which makes it perfect for hunting malware. Most discussion on memory forensics is focused (rightly) on malware analysis, and the benefits of memory forensics for non-malware scenarios have been less publicised.
Often, a lack of understanding of the benefits of memory forensics has pervaded internal investigations or law enforcement. There is a tendency to think, “we’ve got the whole box, so why would we need the memory?</description>
    </item>
    
    <item>
      <title>Introducing bit_of_hex</title>
      <link>https://mattnotmax.github.io/2018/04/introducing-bit_of_hex/</link>
      <pubDate>Sat, 28 Apr 2018 23:19:10 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/2018/04/introducing-bit_of_hex/</guid>
      <description>Hello!
This is the beginning of my digital forensics &amp;amp; incident response blog, bit_of_hex. This blog is born of the philosophy that everyone in the DFIR space has something to contribute, at any level or area within the community.
I also realised that I have benefited for so long from other people&amp;rsquo;s research and effort that it was time I gave something back. Many times when I have searched for that particular forensic artefact or obscure problem I&amp;rsquo;ve found someone who has taken the time to publish their own research.</description>
    </item>
    
    <item>
      <title>About bit_of_hex</title>
      <link>https://mattnotmax.github.io/about/</link>
      <pubDate>Sat, 14 Apr 2018 19:22:21 +0000</pubDate>
      
      <guid>https://mattnotmax.github.io/about/</guid>
      <description>My name is Matt, and work in Digital Forensics &amp;amp; Incident Response (DFIR) based in Melbourne, Australia. This blog, bit_of_hex, allows me to share my research and analysis.
I&amp;rsquo;m contactable on email at matt@bitofhex.com or via Twitter at @mattnotmax.
While ever effort has been made to ensure the accuracy of this blog, readers should never (for this or any other blog) rely on its content without their own up-to-date research and verification.</description>
    </item>
    
  </channel>
</rss>
